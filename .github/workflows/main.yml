name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ] # Pas aan naar je branch namen
  pull_request:
    branches: [ main, development ] # Pas aan naar je branch namen

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Gebruik v4 voor nieuwste features

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Gebruik v4
        with:
          node-version: '18' # Specificeer Node.js versie
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm ci # Gebruik ci voor snellere, betrouwbaardere builds in CI

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check # Zorg dat dit script bestaat in package.json

  test:
    name: Run Tests
    needs: lint # Draai tests alleen als linting succesvol is
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test -- --coverage # Voeg coverage flag toe als je coverage rapporteert

      - name: Upload coverage reports
        if: always() # Upload altijd, ook als tests falen, voor analyse
        uses: actions/upload-artifact@v4 # Gebruik v4
        with:
          name: coverage-report
          path: coverage/ # Zorg dat je test runner output naar deze map schrijft

  build:
    name: Build Application
    needs: test # Bouw alleen als tests succesvol zijn
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env: # Voeg environment variabelen toe die nodig zijn voor de build
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          # Voeg andere build-time env vars hier toe

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/

  # Voorbeeld deployment jobs (pas aan naar je hosting provider)
  # deploy-staging:
  #   name: Deploy to Staging
  #   needs: build
  #   if: github.ref == 'refs/heads/development' && github.event_name == 'push' # Alleen op push naar development
  #   runs-on: ubuntu-latest
  #   environment: staging # Definieer 'staging' environment in GitHub repo settings
  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: nextjs-build
  #         path: .next/
  #     - name: Deploy to Staging
  #       run: |
  #         echo "Deploying to staging environment..."
  #         # Voeg hier je deployment commando's toe (bv. Vercel CLI, rsync, etc.)
  #         # Voorbeeld: npx vercel --token=${{ secrets.VERCEL_TOKEN }} --scope=<your-scope> --prod (als dev branch prod is voor staging)

  # deploy-production:
  #   name: Deploy to Production
  #   needs: build
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Alleen op push naar main
  #   runs-on: ubuntu-latest
  #   environment: production # Definieer 'production' environment in GitHub repo settings
  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: nextjs-build
  #         path: .next/
  #     - name: Deploy to Production
  #       run: |
  #         echo "Deploying to production environment..."
  #         # Voeg hier je deployment commando's toe
  #         # Voorbeeld: npx vercel --token=${{ secrets.VERCEL_TOKEN }} --scope=<your-scope> --prod

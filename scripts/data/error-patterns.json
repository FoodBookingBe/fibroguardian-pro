{
  "patterns": {
    "TS2339_addNotification": {
      "description": "Missing addNotification property on Element",
      "solution": "Add interface extension for Element",
      "examples": [
        "const { addNotification } = useNotification();"
      ]
    },
    "TS2339_message": {
      "description": "Accessing message property on unknown type",
      "solution": "Add type assertion",
      "examples": [
        "error.message",
        "err.message"
      ]
    },
    "TS2339_details": {
      "description": "Accessing details property on unknown type",
      "solution": "Add type assertion",
      "examples": [
        "error.details"
      ]
    },
    "TS2339_code": {
      "description": "Accessing code property on unknown type",
      "solution": "Add type assertion",
      "examples": [
        "error.code"
      ]
    },
    "TS2339_target": {
      "description": "Accessing target property on unknown event",
      "solution": "Add type assertion",
      "examples": [
        "e.target"
      ]
    },
    "TS2322_null": {
      "description": "Null is not assignable to type Element",
      "solution": "Return empty fragment instead of null",
      "examples": [
        "return null;"
      ]
    },
    "TS2322_children": {
      "description": "Children property missing in IntrinsicAttributes",
      "solution": "Add props interface with children",
      "examples": [
        "<Button>Text</Button>"
      ]
    },
    "TS7006_i": {
      "description": "Parameter 'i' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(i) => i.id"
      ]
    },
    "TS7006_e": {
      "description": "Parameter 'e' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(e) => e.target.value"
      ]
    },
    "TS7006_item": {
      "description": "Parameter 'item' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(item) => item.id"
      ]
    },
    "TS7006_log": {
      "description": "Parameter 'log' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(log) => log.id"
      ]
    },
    "TS7006_task": {
      "description": "Parameter 'task' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(task) => task.id"
      ]
    },
    "TS7006_t": {
      "description": "Parameter 't' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(t) => t.id"
      ]
    },
    "TS7006_s": {
      "description": "Parameter 's' implicitly has an 'any' type",
      "solution": "Add explicit type annotation",
      "examples": [
        "(s) => s != null"
      ]
    },
    "TS6133_data": {
      "description": "Variable 'data' is declared but never read",
      "solution": "Prefix with underscore",
      "examples": [
        "const data = await supabase"
      ]
    },
    "TS6133_error": {
      "description": "Variable 'error' is declared but never read",
      "solution": "Prefix with underscore",
      "examples": [
        "const error = await supabase"
      ]
    },
    "TS6133_loading": {
      "description": "Variable 'loading' is declared but never read",
      "solution": "Prefix with underscore",
      "examples": [
        "const { loading } = useAuth()"
      ]
    },
    "TS6133_useRouter": {
      "description": "Import 'useRouter' is declared but never read",
      "solution": "Remove import",
      "examples": [
        "import { useRouter } from 'next/navigation';"
      ]
    },
    "TS6133_useState": {
      "description": "Import 'useState' is declared but never read",
      "solution": "Remove import",
      "examples": [
        "import { useState } from 'react';"
      ]
    },
    "TS6133_useEffect": {
      "description": "Import 'useEffect' is declared but never read",
      "solution": "Remove import",
      "examples": [
        "import { useEffect } from 'react';"
      ]
    },
    "TS6133_useCallback": {
      "description": "Import 'useCallback' is declared but never read",
      "solution": "Remove import",
      "examples": [
        "import { useCallback } from 'react';"
      ]
    },
    "TS6133_React": {
      "description": "Import 'React' is declared but never read",
      "solution": "Remove import",
      "examples": [
        "import React from 'react';"
      ]
    },
    "TS2698_props": {
      "description": "Spread types may only be created from object types",
      "solution": "Add type assertion",
      "examples": [
        "...props",
        "...options"
      ]
    },
    "TS2345_queryKey": {
      "description": "Property 'queryKey' is missing in type",
      "solution": "Add queryKey property",
      "examples": [
        "enabled: !!userId"
      ]
    },
    "TS2724_useAuth": {
      "description": "Module has no exported member named 'useAuth'",
      "solution": "Change import to use _useAuth as useAuth",
      "examples": [
        "import { useAuth } from '@/components/auth/AuthProvider';"
      ]
    },
    "TS18046_error": {
      "description": "'error' is of type 'unknown'",
      "solution": "Add type assertion",
      "examples": [
        "error.message"
      ]
    },
    "TS18046_e": {
      "description": "'e' is of type 'unknown'",
      "solution": "Add type assertion",
      "examples": [
        "e.message"
      ]
    },
    "TS18046_err": {
      "description": "'err' is of type 'unknown'",
      "solution": "Add type assertion",
      "examples": [
        "err.message"
      ]
    },
    "TS7030_useEffect": {
      "description": "Not all code paths return a value",
      "solution": "Add default return",
      "examples": [
        "useEffect(() => {"
      ]
    },
    "TS2614_useReflecties": {
      "description": "Module has no exported member 'useReflecties'",
      "solution": "Change import style",
      "examples": [
        "import { useReflecties } from '@/hooks/useSupabaseQuery';"
      ]
    },
    "TS2614_useMySpecialists": {
      "description": "Module has no exported member 'useMySpecialists'",
      "solution": "Change import style",
      "examples": [
        "import { useMySpecialists } from '@/hooks/useSupabaseQuery';"
      ]
    },
    "TS2614_useTasks": {
      "description": "Module has no exported member 'useTasks'",
      "solution": "Change import style",
      "examples": [
        "import { useTasks } from '@/hooks/useSupabaseQuery';"
      ]
    },
    "TS2614_useTaskLogs": {
      "description": "Module has no exported member 'useTaskLogs'",
      "solution": "Change import style",
      "examples": [
        "import { useTaskLogs } from '@/hooks/useSupabaseQuery';"
      ]
    },
    "TS2614_useRecentLogs": {
      "description": "Module has no exported member 'useRecentLogs'",
      "solution": "Change import style",
      "examples": [
        "import { useRecentLogs } from '@/hooks/useSupabaseQuery';"
      ]
    },
    "TS2614_useInsights": {
      "description": "Module has no exported member 'useInsights'",
      "solution": "Change import style",
      "examples": [
        "import { useInsights } from '@/hooks/useSupabaseQuery';"
      ]
    },
    "TS2614_useTask": {
      "description": "Module has no exported member 'useTask'",
      "solution": "Change import style",
      "examples": [
        "import { useTask } from '@/hooks/useSupabaseQuery';"
      ]
    }
  },
  "TS1003_Identifier expected.": {
    "description": "TypeScript error TS1003: Identifier expected.",
    "regex": "Identifier expected.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/overzicht/page.tsx",
        "line": 139,
        "message": "Identifier expected."
      },
      {
        "file": "app/overzicht/page.tsx",
        "line": 139,
        "message": "Identifier expected."
      },
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 169,
        "message": "Identifier expected."
      }
    ]
  },
  "TS1005_'VALUE' expected.": {
    "description": "TypeScript error TS1005: 'VALUE' expected.",
    "regex": "'VALUE' expected.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/api/auth/callback/route.ts",
        "line": 34,
        "message": "',' expected."
      },
      {
        "file": "app/overzicht/page.tsx",
        "line": 141,
        "message": "'</' expected."
      },
      {
        "file": "app/overzicht/page.tsx",
        "line": 141,
        "message": "'}' expected."
      }
    ]
  },
  "TS1109_Expression expected.": {
    "description": "TypeScript error TS1109: Expression expected.",
    "regex": "Expression expected.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "components/ai/KnowledgeEntryForm.tsx",
        "line": 44,
        "message": "Expression expected."
      },
      {
        "file": "components/ai/KnowledgeEntryForm.tsx",
        "line": 129,
        "message": "Expression expected."
      },
      {
        "file": "components/common/LazyImage.tsx",
        "line": 136,
        "message": "Expression expected."
      }
    ]
  },
  "TS1128_Declaration or statement expected.": {
    "description": "TypeScript error TS1128: Declaration or statement expected.",
    "regex": "Declaration or statement expected.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/api/auth/callback/route.ts",
        "line": 34,
        "message": "Declaration or statement expected."
      },
      {
        "file": "app/api/auth/callback/route.ts",
        "line": 35,
        "message": "Declaration or statement expected."
      },
      {
        "file": "app/api/auth/callback/route.ts",
        "line": 36,
        "message": "Declaration or statement expected."
      }
    ]
  },
  "TS1145_'VALUE' or JSX element expected.": {
    "description": "TypeScript error TS1145: 'VALUE' or JSX element expected.",
    "regex": "'VALUE' or JSX element expected.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/overzicht/page.tsx",
        "line": 139,
        "message": "'{' or JSX element expected."
      },
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 169,
        "message": "'{' or JSX element expected."
      },
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 171,
        "message": "'{' or JSX element expected."
      }
    ]
  },
  "TS1359_Identifier expected. 'VALUE' is a reserved word that cannot be used here.": {
    "description": "TypeScript error TS1359: Identifier expected. 'VALUE' is a reserved word that cannot be used here.",
    "regex": "Identifier expected. 'VALUE' is a reserved word that cannot be used here.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "components/admin/AdminSidebar.tsx",
        "line": 22,
        "message": "Identifier expected. 'const' is a reserved word that cannot be used here."
      },
      {
        "file": "components/subscription/SubscriptionManagement.tsx",
        "line": 92,
        "message": "Identifier expected. 'new' is a reserved word that cannot be used here."
      }
    ]
  },
  "TS1381_Unexpected token. Did you mean `{OBJ}` or `&rbrace;`?": {
    "description": "TypeScript error TS1381: Unexpected token. Did you mean `{OBJ}` or `&rbrace;`?",
    "regex": "Unexpected token. Did you mean `{OBJ}` or `&rbrace;`?",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/overzicht/page.tsx",
        "line": 140,
        "message": "Unexpected token. Did you mean `{'}'}` or `&rbrace;`?"
      },
      {
        "file": "components/common/LazyImage.tsx",
        "line": 138,
        "message": "Unexpected token. Did you mean `{'}'}` or `&rbrace;`?"
      },
      {
        "file": "components/subscription/withFeatureAccess.tsx",
        "line": 61,
        "message": "Unexpected token. Did you mean `{'}'}` or `&rbrace;`?"
      }
    ]
  },
  "TS1382_Unexpected token. Did you mean `{OBJ}` or `&gt;`?": {
    "description": "TypeScript error TS1382: Unexpected token. Did you mean `{OBJ}` or `&gt;`?",
    "regex": "Unexpected token. Did you mean `{OBJ}` or `&gt;`?",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/overzicht/page.tsx",
        "line": 139,
        "message": "Unexpected token. Did you mean `{'>'}` or `&gt;`?"
      },
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 169,
        "message": "Unexpected token. Did you mean `{'>'}` or `&gt;`?"
      },
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 171,
        "message": "Unexpected token. Did you mean `{'>'}` or `&gt;`?"
      }
    ]
  },
  "TS1434_Unexpected keyword or identifier.": {
    "description": "TypeScript error TS1434: Unexpected keyword or identifier.",
    "regex": "Unexpected keyword or identifier.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "components/ai/AIAssistant.tsx",
        "line": 126,
        "message": "Unexpected keyword or identifier."
      },
      {
        "file": "components/onboarding/GuidedTour.tsx",
        "line": 29,
        "message": "Unexpected keyword or identifier."
      },
      {
        "file": "components/subscription/PricingTables.tsx",
        "line": 26,
        "message": "Unexpected keyword or identifier."
      }
    ]
  },
  "TS2657_JSX expressions must have one parent element.": {
    "description": "TypeScript error TS2657: JSX expressions must have one parent element.",
    "regex": "JSX expressions must have one parent element.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/overzicht/page.tsx",
        "line": 138,
        "message": "JSX expressions must have one parent element."
      },
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 168,
        "message": "JSX expressions must have one parent element."
      },
      {
        "file": "components/common/LazyImage.tsx",
        "line": 127,
        "message": "JSX expressions must have one parent element."
      }
    ]
  },
  "TS17002_Expected corresponding JSX closing tag for 'VALUE'.": {
    "description": "TypeScript error TS17002: Expected corresponding JSX closing tag for 'VALUE'.",
    "regex": "Expected corresponding JSX closing tag for 'VALUE'.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "components/common/ErrorBoundary.tsx",
        "line": 172,
        "message": "Expected corresponding JSX closing tag for 'string'."
      },
      {
        "file": "components/onboarding/GuidedTour.tsx",
        "line": 37,
        "message": "Expected corresponding JSX closing tag for 'string'."
      },
      {
        "file": "components/subscription/PricingTables.tsx",
        "line": 38,
        "message": "Expected corresponding JSX closing tag for 'string'."
      }
    ]
  },
  "TS17008_JSX element 'VALUE' has no corresponding closing tag.": {
    "description": "TypeScript error TS17008: JSX element 'VALUE' has no corresponding closing tag.",
    "regex": "JSX element 'VALUE' has no corresponding closing tag.",
    "solution": "Review the error and fix manually",
    "examples": [
      {
        "file": "app/overzicht/page.tsx",
        "line": 139,
        "message": "JSX element 'string' has no corresponding closing tag."
      },
      {
        "file": "components/subscription/withFeatureAccess.tsx",
        "line": 60,
        "message": "JSX element 'string' has no corresponding closing tag."
      },
      {
        "file": "tests/LazyImage.spec.tsx",
        "line": 29,
        "message": "JSX element 'string' has no corresponding closing tag."
      }
    ]
  }
}